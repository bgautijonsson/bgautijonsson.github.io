<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>bggj</title>
<link>https://www.bggj.is/index.html</link>
<atom:link href="https://www.bggj.is/index.xml" rel="self" type="application/rss+xml"/>
<description>Blogg um tölfræði og gögn</description>
<generator>quarto-1.2.313</generator>
<lastBuildDate>Tue, 28 Jun 2022 00:00:00 GMT</lastBuildDate>
<item>
  <title>Fetching FTP data from the Ceda Archives</title>
  <dc:creator>Brynjólfur Gauti Guðrúnar Jónsson</dc:creator>
  <link>https://www.bggj.is/posts/ceda-archive/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(bggjphd)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">theme_set</span>(<span class="fu" style="color: #4758AB;">theme_bggj</span>())</span></code></pre></div>
</details>
</div>
<section id="ukcp-projections" class="level1 page-columns page-full">
<h1>UKCP Projections</h1>

<div class="no-row-height column-margin column-container"><div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.bggj.is/posts/ceda-archive/Figures/ceda_data.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Figure 1. Screenshot of the data page</figcaption><p></p>
</figure>
</div></div><p>For my PhD modeling I needed to fetch a large amount of data from the <a href="https://help.ceda.ac.uk/article/280-ftp">CEDA Archive FTP server</a>, specifically I use hourly precipitation projections from <a href="https://catalogue.ceda.ac.uk/uuid/e304987739e04cdc960598fa5e4439d0">UKCP Local Projections on a 5km grid over the UK for 1980-2080</a>. The hourly precipitation projections are stored in 720 files that are all approximately 120mb to 130mb.</p>
<p>I could go through the list of files and click on each one to download it, but being a lazy programmer that’s not good enough, so I wrote a program that</p>
<ul>
<li>uses my CEDA FTP credentials to download the 720 files one at a time into a temporary file</li>
<li>does some transformations on it <em>(I only need the yearly maximums of hourly precipitation per location)</em></li>
<li>deletes the temporary file and moves onto the next one</li>
</ul>
<p>The hardest part was getting my FTP connection to work, so I thought I might write out my process so that some future googlers might find this post.</p>
</section>
<section id="how-to" class="level1">
<h1>How-To</h1>
<section id="setup" class="level2">
<h2 class="anchored" data-anchor-id="setup">Setup</h2>
<p>The first things you’re going to need are the following:</p>
<ul>
<li>A CEDA Archive account</li>
<li>A CEDA FTP password</li>
<li>The location of the files you want to download.</li>
<li>On your dataset page, press download and navigate to the subset you want to fetch</li>
</ul>
</section>
<section id="file-location" class="level2">
<h2 class="anchored" data-anchor-id="file-location">File Location</h2>
<p>In my case the 720 files are located at</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">url <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"ftp://ftp.ceda.ac.uk/badc/ukcp18/data/land-cpm/uk/5km/rcp85/01/pr/1hr/v20210615/"</span></span></code></pre></div>
</details>
</div>
</section>
<section id="authentication" class="level2">
<h2 class="anchored" data-anchor-id="authentication">Authentication</h2>
<p>We’re going to need to input our username and password into the URL to download the data. In order to hide my login info when coding I put it in my R Environment <em>(easy to edit with <code>usethis::edit_r_environ()</code>)</em> and can thus write a function to input it in requests. I never assign my info to variables, but rather just use functions to input them.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">userpwd <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>() {</span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">str_c</span>(</span>
<span id="cb3-3">    <span class="fu" style="color: #4758AB;">Sys.getenv</span>(<span class="st" style="color: #20794D;">"CEDA_USR"</span>), </span>
<span id="cb3-4">    <span class="fu" style="color: #4758AB;">Sys.getenv</span>(<span class="st" style="color: #20794D;">"CEDA_PWD"</span>), </span>
<span id="cb3-5">    <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">":"</span></span>
<span id="cb3-6">  )</span>
<span id="cb3-7">}</span></code></pre></div>
</details>
</div>
<p>Now we can send a request to the FTP server in order to get a list of all the files we want to download</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_9de7736c9dcab1d042e2deac0607be19">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">filenames <span class="ot" style="color: #003B4F;">&lt;-</span> RCurl<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">getURL</span>(</span>
<span id="cb4-2">  url,</span>
<span id="cb4-3">  <span class="at" style="color: #657422;">userpwd =</span> <span class="fu" style="color: #4758AB;">userpwd</span>(),</span>
<span id="cb4-4">  <span class="at" style="color: #657422;">dirlistonly =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb4-5">)</span></code></pre></div>
</details>
</div>
<p>As you can see below, the result is given to us as one long string.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">stringr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">str_sub</span>(</span>
<span id="cb5-2">  filenames,</span>
<span id="cb5-3">  <span class="at" style="color: #657422;">start =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb5-4">  <span class="at" style="color: #657422;">end =</span> <span class="dv" style="color: #AD0000;">160</span></span>
<span id="cb5-5">)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "pr_rcp85_land-cpm_uk_5km_01_1hr_19801201-19801230.nc\npr_rcp85_land-cpm_uk_5km_01_1hr_19810101-19810130.nc\npr_rcp85_land-cpm_uk_5km_01_1hr_19810201-19810230.nc\np"</code></pre>
</div>
</div>
</section>
<section id="cleaning-up-the-file-names" class="level2">
<h2 class="anchored" data-anchor-id="cleaning-up-the-file-names">Cleaning up the file names</h2>
<p>We get a single string with all the file names. It’s easy to split them up into separate strings ands remove the trailing empty line.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">files <span class="ot" style="color: #003B4F;">&lt;-</span> filenames <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb7-2">  stringr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">str_split_1</span>(<span class="at" style="color: #657422;">pattern =</span> <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\n</span><span class="st" style="color: #20794D;">"</span>)</span>
<span id="cb7-3"></span>
<span id="cb7-4">files <span class="ot" style="color: #003B4F;">&lt;-</span> files[<span class="sc" style="color: #5E5E5E;">-</span><span class="fu" style="color: #4758AB;">length</span>(files)]</span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;">head</span>(files)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "pr_rcp85_land-cpm_uk_5km_01_1hr_19801201-19801230.nc"
[2] "pr_rcp85_land-cpm_uk_5km_01_1hr_19810101-19810130.nc"
[3] "pr_rcp85_land-cpm_uk_5km_01_1hr_19810201-19810230.nc"
[4] "pr_rcp85_land-cpm_uk_5km_01_1hr_19810301-19810330.nc"
[5] "pr_rcp85_land-cpm_uk_5km_01_1hr_19810401-19810430.nc"
[6] "pr_rcp85_land-cpm_uk_5km_01_1hr_19810501-19810530.nc"</code></pre>
</div>
</div>
</section>
<section id="writing-data-processing-functions" class="level2">
<h2 class="anchored" data-anchor-id="writing-data-processing-functions">Writing data processing functions</h2>
<p>Now comes the tricky part. We are going to download 720 files <em>(one for each month)</em> that are around 120MB each. If we just download them and keep them on our hard drive that’s going to be upwards of 70GB. Instead of doing that we will use the function <code>process_data()</code> below to do the following:</p>
<ul>
<li>For each dataset</li>
</ul>
<ol type="1">
<li>Create a temporary file</li>
<li>Download the data into the temporary file</li>
<li>For each location, throw away all measurements except for the maximum</li>
<li>Create a tidy table with information about the coordinates of the location, the max precipitation and the observation date-range</li>
<li>Delete the temporary file</li>
</ol>
<p>Before we can iterate we will need to create a new helper function. Since we will now be using <code>download.file()</code> to download our data sets, we need to input our username and password into the URL. As before, in order to not reveal our information we use functions instead of creating global variables in the environment. Thus we won’t accidentally leak our information when for example taking screenshots.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">make_download_path <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(filename) {</span>
<span id="cb9-2">  url <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb9-3">    stringr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">str_replace</span>(<span class="st" style="color: #20794D;">"//"</span>, stringr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">str_c</span>(<span class="st" style="color: #20794D;">"//"</span>, <span class="fu" style="color: #4758AB;">userpwd</span>(), <span class="st" style="color: #20794D;">"@"</span>)) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb9-4">    stringr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">str_c</span>(filename)</span>
<span id="cb9-5">}</span></code></pre></div>
</details>
</div>
<p>The data files are stored in <code>.nc</code> form. The <code>ncdf4</code> package lets us connect to these kinds of files and pull in the variables we need.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">process_data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(filename) {</span>
<span id="cb10-2">  </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;">Sys.sleep</span>(<span class="fl" style="color: #AD0000;">0.1</span>)</span>
<span id="cb10-4">  </span>
<span id="cb10-5">  from_to <span class="ot" style="color: #003B4F;">&lt;-</span> stringr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">str_extract_all</span>(filename, <span class="st" style="color: #20794D;">"_[0-9]{8}-[0-9]{8}"</span>)[[<span class="dv" style="color: #AD0000;">1</span>]] <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb10-6">    stringr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">str_replace</span>(<span class="st" style="color: #20794D;">"_"</span>, <span class="st" style="color: #20794D;">""</span>) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb10-7">    stringr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">str_split_1</span>(<span class="st" style="color: #20794D;">"-"</span>)</span>
<span id="cb10-8">  </span>
<span id="cb10-9">  from <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.Date</span>(from_to[<span class="dv" style="color: #AD0000;">1</span>], <span class="at" style="color: #657422;">format =</span> <span class="st" style="color: #20794D;">"%Y%m%d"</span>)</span>
<span id="cb10-10">  to <span class="ot" style="color: #003B4F;">&lt;-</span> from <span class="sc" style="color: #5E5E5E;">+</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">months</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">abbreviate =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">-</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">days</span>(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb10-11">  </span>
<span id="cb10-12">  tmp <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tempfile</span>()</span>
<span id="cb10-13">  </span>
<span id="cb10-14">  <span class="fu" style="color: #4758AB;">download.file</span>(</span>
<span id="cb10-15">    <span class="fu" style="color: #4758AB;">make_download_path</span>(filename),</span>
<span id="cb10-16">    tmp,</span>
<span id="cb10-17">    <span class="at" style="color: #657422;">mode =</span> <span class="st" style="color: #20794D;">"wb"</span>,</span>
<span id="cb10-18">    <span class="at" style="color: #657422;">quiet =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb10-19">  )</span>
<span id="cb10-20">  </span>
<span id="cb10-21">  temp_d <span class="ot" style="color: #003B4F;">&lt;-</span> ncdf4<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">nc_open</span>(tmp)</span>
<span id="cb10-22">  </span>
<span id="cb10-23">  max_pr <span class="ot" style="color: #003B4F;">&lt;-</span> ncdf4<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">ncvar_get</span>(temp_d, <span class="st" style="color: #20794D;">"pr"</span>) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb10-24">    <span class="fu" style="color: #4758AB;">apply</span>(<span class="at" style="color: #657422;">MARGIN =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>), <span class="at" style="color: #657422;">FUN =</span> max)</span>
<span id="cb10-25">  </span>
<span id="cb10-26">  lat <span class="ot" style="color: #003B4F;">&lt;-</span> ncdf4<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">ncvar_get</span>(temp_d, <span class="st" style="color: #20794D;">"latitude"</span>)</span>
<span id="cb10-27">  long <span class="ot" style="color: #003B4F;">&lt;-</span> ncdf4<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">ncvar_get</span>(temp_d, <span class="st" style="color: #20794D;">"longitude"</span>)</span>
<span id="cb10-28">  </span>
<span id="cb10-29">  out <span class="ot" style="color: #003B4F;">&lt;-</span> tidyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">crossing</span>(</span>
<span id="cb10-30">    <span class="at" style="color: #657422;">proj_x =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">180</span>,</span>
<span id="cb10-31">    <span class="at" style="color: #657422;">proj_y =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">244</span>,</span>
<span id="cb10-32">    <span class="at" style="color: #657422;">from_date =</span> from,</span>
<span id="cb10-33">    <span class="at" style="color: #657422;">to_date =</span> to</span>
<span id="cb10-34">  ) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb10-35">    dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">arrange</span>(proj_y, proj_x) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb10-36">    dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mutate</span>(</span>
<span id="cb10-37">      <span class="at" style="color: #657422;">precip =</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(max_pr),</span>
<span id="cb10-38">      <span class="at" style="color: #657422;">longitude =</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(long),</span>
<span id="cb10-39">      <span class="at" style="color: #657422;">latitude =</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(lat),</span>
<span id="cb10-40">      <span class="at" style="color: #657422;">station =</span> <span class="fu" style="color: #4758AB;">row_number</span>()</span>
<span id="cb10-41">    )</span>
<span id="cb10-42">  </span>
<span id="cb10-43">  out</span>
<span id="cb10-44">}</span></code></pre></div>
</details>
</div>
</section>
<section id="putting-it-all-together" class="level2">
<h2 class="anchored" data-anchor-id="putting-it-all-together">Putting it all together</h2>
<p>Having defined our function we throw it into <code>purrr::map_dfr()</code> <em>(<code>map_dfr()</code> tells R that the output should be a dataframe in which the iteration results are concatenated rowwise)</em> for iteration and say yes please to a progress bar. I could have used the <code>furrr</code> package to reduce the time by downloading multiple files in parallel, but I was afraid of getting timed out from the CEDA FTP server so I decided to just be patient.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">d <span class="ot" style="color: #003B4F;">&lt;-</span> files <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb11-2">  purrr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">map_dfr</span>(process_data, <span class="at" style="color: #657422;">.progress =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</details>
</div>
<p>Having created our dataset we write it out to disk using everyone’s favorite new format <a href="https://arrow-user2022.netlify.app/">parquet</a>. This way we can efficiently query the data without reading it into memory using <code>arrow::open_dataset()</code>.</p>
<p><strong>This whole process took 3 hours and 21 minutes on my computer. The largest bottleneck by far was downloading the data.</strong></p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">d <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb12-2">  arrow<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">write_parquet</span>(<span class="st" style="color: #20794D;">"monthly_data.parquet"</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="final-processing" class="level2">
<h2 class="anchored" data-anchor-id="final-processing">Final processing</h2>
<p>I mentioned above that I only needed the yearly data, but currently the dataset contains monthly maxima. Since I might need to do seasonal modeling later in my PhD I decided it would be smart to keep the monthly data, but it’s also very easy to further summarise the data into yearly maxima.</p>
<p>Since the data for 1980 contain only one month, I decided to not include that year as it is not really a true yearly maximum.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">d <span class="ot" style="color: #003B4F;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb13-2">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">year =</span> lubridate<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">year</span>(from_date)) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb13-3">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">filter</span>(year <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">1980</span>) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb13-4">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">group_by</span>(year, station, proj_x, proj_y, longitude, latitude) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb13-5">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">summarise</span>(</span>
<span id="cb13-6">    <span class="at" style="color: #657422;">precip =</span> <span class="fu" style="color: #4758AB;">max</span>(precip),</span>
<span id="cb13-7">    <span class="at" style="color: #657422;">.groups =</span> <span class="st" style="color: #20794D;">"drop"</span></span>
<span id="cb13-8">  )</span>
<span id="cb13-9"></span>
<span id="cb13-10">d <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb13-11">  arrow<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">write_parquet</span>(<span class="st" style="color: #20794D;">"yearly_data.parquet"</span>)</span></code></pre></div>
</details>
</div>


</section>
</section>

 ]]></description>
  <category>english</category>
  <category>R</category>
  <category>phd</category>
  <category>big data</category>
  <category>scraping</category>
  <guid>https://www.bggj.is/posts/ceda-archive/index.html</guid>
  <pubDate>Tue, 28 Jun 2022 00:00:00 GMT</pubDate>
  <media:content url="https://www.bggj.is/posts/ceda-archive/Figures/ceda_data.png" medium="image" type="image/png" height="94" width="144"/>
</item>
<item>
  <title>Fetching FTP data from the Ceda Archives</title>
  <dc:creator>Brynjólfur Gauti Guðrúnar Jónsson</dc:creator>
  <link>https://www.bggj.is/posts/forest-plot-table/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(bggjphd)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">theme_set</span>(<span class="fu" style="color: #4758AB;">theme_bggj</span>())</span></code></pre></div>
</details>
</div>
<p>For my PhD modeling I needed to fetch a large amount of data from the CEDA Archive, specifically <a href="https://catalogue.ceda.ac.uk/uuid/e304987739e04cdc960598fa5e4439d0">UKCP Local Projections on a 5km grid over the UK for 1980-2080</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.bggj.is/posts/forest-plot-table/Figures/ceda_data.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Screenshot of the data page</figcaption><p></p>
</figure>
</div>



 ]]></description>
  <category>english</category>
  <category>R</category>
  <category>plots</category>
  <category>tutorial</category>
  <guid>https://www.bggj.is/posts/forest-plot-table/index.html</guid>
  <pubDate>Tue, 28 Jun 2022 00:00:00 GMT</pubDate>
  <media:content url="https://www.bggj.is/posts/forest-plot-table/featured.png" medium="image" type="image/png" height="89" width="144"/>
</item>
</channel>
</rss>
