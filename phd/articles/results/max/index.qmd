---
title: "The Max Step"
bibliography: references.bib
reference-location: margin
citation-location: margin
---

# The GEV Model

```{=tex}
\mathrm{GEV(y|\mu, \sigma, \xi)} = \begin{cases}
e^{- \left(1 + \xi \frac{y - \mu}{\sigma}\right)_+^{-1/\xi}}, \xi\neq0 \\
e^{- e^{- \frac{y - \mu}{\sigma}
}}, \xi=0
\end{cases}
```


In our case we want $\mu$ to vary with time. If we write $y_{it}$ for the observed hourly maximum at station $i$ during year $t$ we will then have

```{=tex}
y_{it} \sim \mathrm{GEV}(\mu_{it}, \sigma_i, \xi_i), \quad \mu_{it}, \sigma_i > 0, \quad \xi_i \in (-0.5, 0.5),
```


where

```{=tex}
\mu_{it} = \mu_i \cdot (1 + \Delta_i \cdot (t - t_0)),
```


and

```{=tex}
1 + \xi_i \frac{y_{it} - \mu_{it}}{\sigma_i} > 0, \quad \forall i, t.
```


# Maximum Likelihood Estimation

## Transformed parameters

Having performed the Max step and saved the ML estimates we can easily load them by fetching the object `station_estimates`. Here we plot the distribution of transformed estimates.

```{=tex}
\begin{aligned}
\psi &= \log(\mu) \\
\tau &= \log(\frac{\sigma}{\mu}) = \log(\sigma) - \log(\mu) \\
\phi &= h(\xi) \\
\gamma &= d(\Delta),
\end{aligned}
```

where the link functions for the shape and trend parameters are defined according to @johannesson2021


```{=tex}
\begin{aligned}
h(\xi) &= a_\phi + b_\phi \log\left(-\log\left[1 - \left(\xi + \frac12\right)^{c_\phi}\right]\right) \\
c_\phi &= 0.8 \\
b_\phi &= -\frac{1}{c_\phi}\log\left(1 - \frac{1}{2^{c_\phi}}\right)\left(1 - \frac{1}{2^{c_\phi}}\right) 2^{c_\phi - 1} \\
a_\phi &= -b_\phi \log\left(-\log(1 - \frac{1}{2^{c_\phi}})\right) \\

\newline

d(\Delta) &= \frac12 \delta_0 \left(\log(\delta_0 + \Delta) - \log(\delta_0 - \Delta_i)\right) \\
\delta_0 &= 0.008.
\end{aligned}
```

# Results

```{r setup}
#| message: false
#| warning: false
library(bggjphd)
library(tidyverse)
library(GGally)
library(cowplot)
library(arrow)
library(here)
theme_set(theme_bggj())
```

```{r}
d <- station_estimates |> 
  select(station, par) |> 
  unnest(par) |> 
  inner_join(
    stations
  ) |> 
  select(station, proj_x, proj_y, name, value)
```

## Distributions

### Transformed Scale

```{r}
d_prior <- crossing(
  name = c("phi", "gamma"),
  x = seq(-1, 1, len = 200)
) |> 
  mutate(
    x = ifelse(name == "phi", x * 0.8, x * 0.01),
    y = ifelse(name == "phi", prior_shape(x) |> exp(), prior_trend(x) |> exp()),
    y = ifelse(name == "phi", y * 6000, y * 0.05)
  )


d |> 
  ggplot(aes(value)) +
  geom_histogram(bins = 60) +
  geom_line(
    data = d_prior,
    aes(x = x, y = y * 1e3),
    inherit.aes = F
  ) +
  facet_wrap("name", scales = "free") +
  labs(
    x = NULL,
    y = NULL,
    title = "Distributions of GEV parameters from Max step",
    subtitle = "The superimposed curves are the implied prior distributions"
  )
```

```{r}
#| fig-asp: 1
d |> 
  pivot_wider() |> 
  select(-station, -proj_x, -proj_y) |> 
  ggpairs(progress = FALSE)
```

### Original Scale

```{r}
d_prior <- crossing(
  name = c("phi", "gamma"),
  x = seq(-1, 1, len = 200)
) |> 
  mutate(
    x = ifelse(name == "phi", x * 0.8, x * 0.01),
    y = ifelse(name == "phi", prior_shape(x) |> exp(), prior_trend(x) |> exp()),
    y = ifelse(name == "phi", y * 2000000, y * 20),
    x = ifelse(name == "phi", link_shape_inverse(x), link_trend_inverse(x)),
    name = ifelse(name == "phi", "xi", "delta")
  )

d |> 
  pivot_wider() |> 
  mutate(mu = exp(psi),
         sigma = exp(tau + psi),
         xi = link_shape_inverse(phi),
         delta = link_trend_inverse(gamma)) |> 
  select(-psi, -tau, -phi, -gamma, -proj_x, -proj_y) |> 
  pivot_longer(c(-station)) |> 
  mutate(name = fct_relevel(name, "mu", "sigma", "xi", "delta")) |> 
  ggplot(aes(value)) +
  geom_histogram(bins = 100) +
  geom_line(
    data = d_prior,
    aes(x = x, y = y),
    inherit.aes = F
  ) +
  facet_wrap("name", scales = "free") +
  labs(
    x = NULL,
    y = NULL,
    title = "Distributions of backtransformed GEV parameters from Max step",
    subtitle = "The superimposed curves are the implied prior distributions"
  )
```

```{r}
#| fig-asp: 1
d |> 
  pivot_wider() |> 
  mutate(mu = exp(psi),
         sigma = exp(tau + psi),
         xi = link_shape_inverse(phi),
         delta = link_trend_inverse(gamma)) |> 
  select(-psi, -tau, -phi, -gamma, -station, -proj_x, -proj_y) |> 
  ggpairs(progress = FALSE)
```

## Spatial Distribution

### Location

```{r}
d |> 
  filter(name == "psi") |> 
  ggplot(aes(proj_x, proj_y, fill = value)) +
  geom_raster(interpolate = TRUE) +
  scale_x_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_x), pretty(d$proj_x))
  ) +
  scale_y_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_y), pretty(d$proj_y))
  ) +
  scale_fill_viridis_c() +
  labs(
    x = "X Projection",
    y = "Y Projection",
    fill = NULL,
    title = "Spatial distribution of Psi"
  )
```

```{r}
d |> 
  filter(name == "psi") |> 
  ggplot(aes(proj_x, proj_y, fill = exp(value))) +
  geom_raster(interpolate = TRUE) +
  scale_x_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_x), pretty(d$proj_x))
  ) +
  scale_y_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_y), pretty(d$proj_y))
  ) +
  scale_fill_viridis_c() +
  labs(
    x = "X Projection",
    y = "Y Projection",
    fill = NULL,
    title = "Spatial distribution of Mu"
  )
```

### Scale

```{r}
d |> 
  filter(name == "tau") |> 
  ggplot(aes(proj_x, proj_y, fill = value)) +
  geom_raster(interpolate = TRUE) +
  scale_x_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_x), pretty(d$proj_x))
  ) +
  scale_y_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_y), pretty(d$proj_y))
  ) +
  scale_fill_viridis_c() +
  labs(
    x = "X Projection",
    y = "Y Projection",
    fill = NULL,
    title = "Spatial distribution of Tau"
  )
```

```{r}
d |> 
  pivot_wider() |> 
  mutate(sigma = exp(tau + psi)) |> 
  ggplot(aes(proj_x, proj_y, fill = sigma)) +
  geom_raster(interpolate = TRUE) +
  scale_x_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_x), pretty(d$proj_x))
  ) +
  scale_y_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_y), pretty(d$proj_y))
  ) +
  scale_fill_viridis_c() +
  labs(
    x = "X Projection",
    y = "Y Projection",
    fill = NULL,
    title = "Spatial distribution of Sigma"
  )
```

### Shape

```{r}
d |> 
  filter(name == "phi") |> 
  ggplot(aes(proj_x, proj_y, fill = value)) +
  geom_raster(interpolate = TRUE) +
  scale_x_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_x), pretty(d$proj_x))
  ) +
  scale_y_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_y), pretty(d$proj_y))
  ) +
  scale_fill_viridis_c() +
  labs(
    x = "X Projection",
    y = "Y Projection",
    fill = NULL,
    title = "Spatial distribution of Phi"
  )
```

```{r}
d |> 
  pivot_wider() |> 
  mutate(xi = link_shape_inverse(phi)) |> 
  ggplot(aes(proj_x, proj_y, fill = xi)) +
  geom_raster(interpolate = TRUE) +
  scale_x_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_x), pretty(d$proj_x))
  ) +
  scale_y_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_y), pretty(d$proj_y))
  ) +
  scale_fill_viridis_c() +
  labs(
    x = "X Projection",
    y = "Y Projection",
    fill = NULL,
    title = "Spatial distribution of Xi"
  )
```

### Trend

```{r}
d |> 
  filter(name == "gamma") |> 
  ggplot(aes(proj_x, proj_y, fill = value)) +
  geom_raster(interpolate = TRUE) +
  scale_x_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_x), pretty(d$proj_x))
  ) +
  scale_y_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_y), pretty(d$proj_y))
  ) +
  scale_fill_viridis_c() +
  labs(
    x = "X Projection",
    y = "Y Projection",
    fill = NULL,
    title = "Spatial distribution of Gamma"
  )
```

```{r}
d |> 
  pivot_wider() |> 
  mutate(delta = link_trend_inverse(gamma)) |> 
  ggplot(aes(proj_x, proj_y, fill = delta)) +
  geom_raster(interpolate = TRUE) +
  scale_x_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_x), pretty(d$proj_x))
  ) +
  scale_y_continuous(
    expand = expansion(),
    breaks = c(range(d$proj_y), pretty(d$proj_y))
  ) +
  scale_fill_viridis_c() +
  labs(
    x = "X Projection",
    y = "Y Projection",
    fill = NULL,
    title = "Spatial distribution of Delta"
  )
```
