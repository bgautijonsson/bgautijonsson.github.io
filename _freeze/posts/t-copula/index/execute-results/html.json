{
  "hash": "4edd99c92d9adb8b3f0896566ef30458",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"It was the best of tails, it was the worst of tails: The T-Copula\"\nsubtitle: \"Copulas in Stan: Episode III\"\ndescription: \"This post continues the series on copulas in Stan by introducing the t-copula, discussing its properties, applications, and providing examples of how to implement it in Stan.\"\ndate: \"2024-12-12\"\nformat:\n  html: \n    code-fold: show\n    toc: true\n    toc-location: left\nexecute:\n  echo: true\nimage: images/t_copula_meme.jpg\nengine: knitr\nreference-location: margin\ncitation-location: margin\ncategories:\n    - stan\n    - copulas\n    - copulas in stan\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(cmdstanr)\nlibrary(bayesplot)\nlibrary(patchwork)\nlibrary(gt)\ntheme_set(bggjphd::theme_bggj())\n```\n:::\n\n\n\nThis post continues our series on copulas in Stan by introducing the t-copula and comparing it with the Gaussian copula [we covered previously](../gaussian-copula/index.qmd). We'll focus particularly on how the t-copula's tail dependence makes it more suitable for modeling extreme events.\n\n**Other posts in this series:**\n\n1. [Introduction to Copulas in Stan](../stan-copulas-1/index.qmd)\n2. [A Gentle Introduction: The Gaussian Copula](../gaussian-copula/index.qmd)\n\n::: {.callout-note}\nThis post assumes you're familiar with the basics of copulas covered in the previous posts. If you're new to copulas, I recommend starting with the [introduction post](../stan-copulas-1/index.qmd).\n:::\n\n# Motivation: The Need for Tail Dependence\n\nBefore diving into the mathematical details, let's understand why we need the t-copula in the first place. Consider the following scenarios:\n\n1. **Stock Market Crashes**: During market crashes, stocks tend to fall together. The Gaussian copula can underestimate the probability of these joint extreme events.\n2. **Credit Default Modeling**: The 2008 financial crisis highlighted the limitations of Gaussian copulas in modeling joint defaults. When one entity defaults, others are more likely to default as well - a phenomenon not well-captured by the Gaussian copula.\n3. **Natural Disasters**: Extreme weather events often exhibit strong dependencies - when one measurement (temperature, rainfall, wind speed) reaches an extreme value, others are more likely to be extreme as well.\n\nThe t-copula addresses these limitations while maintaining many of the nice properties of the Gaussian copula.\n\n**In this post I might use Student-t and t exchangeably**\n\n::: {.callout-note}\n## A Quick Refresher on the Student-t Distribution\n\nThe Student-t distribution with $\\nu$ degrees of freedom can be viewed as arising from a normally distributed variable whose variability is adjusted by a random scaling factor derived from a chi-square distribution. \n\nFormally, if we let $Z \\sim \\mathcal{N}(0,1)$ and $V \\sim \\chi^2_\\nu$ be independent, then the t-distributed variable $T$ can be defined as:\n\n$$\nT = \\frac{Z}{\\sqrt{V/\\nu}}.\n$$\n\nHere, $Z$ represents a standardized normal deviate, and $V/\\nu$ acts like a variance estimate. As $\\nu$ grows large, the t-distribution approaches the standard normal distribution, and for smaller $\\nu$, the distribution exhibits heavier tails, capturing extreme values more frequently.\n\n:::\n\n\n# The T-Copula: A Gentle Introduction\n\n![](images/t_copula_meme.jpg)\n\n## What is the t-Copula?\n\nThe t-copula is derived from the multivariate t-distribution, just as the Gaussian copula comes from the multivariate normal. It has two key parameters:\n\n1. A correlation matrix $\\Sigma$ (like the Gaussian copula)\n2. Degrees of freedom $\\nu$ (unique to the t-copula)\n\nThe degrees of freedom parameter $\\nu$ controls the heaviness of the tails:\n\n* Lower values $\\to$ heavier tails $\\to$ stronger tail dependence\n* Higher values $\\to$ lighter tails $\\to$ approaches the Gaussian copula\n* As $\\nu \\to \\infty$, the t-copula becomes the Gaussian copula\n\n## Building Intuition: The Random Scale Factor\n\nOne of the most intuitive ways to understand the t-copula is through its stochastic representation:\n\n1. Start with correlated normal variables $\\mathbf{Z} \\sim \\mathcal{N}(\\mathbf{0}, \\Sigma)$\n2. Generate a random scale factor $W \\sim \\chi^2_\\nu$\n3. Multiply everything by $\\sqrt{\\nu/W}$ to get $\\mathbf{X} = \\sqrt{\\nu/W} \\cdot \\mathbf{Z}$\n\nThis shared scaling creates tail dependence:\n\n* When $W$ is small, all variables become large together\n* The smaller $\\nu$ is, the more variable $W$ becomes\n* This creates more frequent joint extreme events than the Gaussian copula\n\n## Understanding Tail Dependence\n\nBefore we proceed further, let's formally define tail dependence. For a bivariate copula C, the upper and lower tail dependence coefficients are defined as:\n\n$$\n\\begin{aligned}\n\\lambda_U &= \\lim_{u \\to 1} P(U_2 > F_2^{-1}(u) | U_1 > F_1^{-1}(u)) \\\\\n&= \\lim_{u \\to 1} \\frac{1-2u+C(u,u)}{1-u} \\\\\n\\lambda_L &= \\lim_{u \\to 0} P(U_2 \\leq F_2^{-1}(u) | U_1 \\leq F_1^{-1}(u)) \\\\\n&= \\lim_{u \\to 0} \\frac{C(u,u)}{u}\n\\end{aligned}\n$$\n\nIntuitively, $\\lambda_U$ measures the probability that one variable is extremely large given that another is extremely large, while $\\lambda_L$ measures the probability that one variable is extremely small given that another is extremely small.\n\nDue to radial symmetry, the t-copula has identical lower- and upper-tail dependence, given by:\n\n$$\n\\lambda_U = \\lambda_L = 2t_{\\nu+1}\\left(-\\sqrt{\\frac{(\\nu + 1)(1-\\rho)}{1+\\rho}}\\right)\n$$\n\nwhere:\n\n* $t_{\\nu+1}$ is the cumulative distribution function of a univariate t-distribution with $\\nu+1$ degrees of freedom\n* $\\rho$ is the correlation parameter\n* $\\nu$ is the degrees of freedom parameter\n\nSome key properties of this tail dependence:\n\n1. It is decreasing in $\\nu$ for fixed $\\rho$ (more degrees of freedom $\\to$ less tail dependence)\n2. It is increasing in $\\rho$ for fixed $\\nu$ (stronger correlation $\\to$ stronger tail dependence)\n3. As $\\nu \\to \\infty$, $\\lambda_U = \\lambda_L \\to 0$ for $|\\rho| < 1$, recovering the Gaussian case\n4. For $\\rho = 1$, we have $\\lambda_U = \\lambda_L = 1$ regardless of $\\nu$\n5. Even for $\\rho = 0$, we have non-zero tail dependence for finite $\\nu$.\n\n\n\n::: {.cell .column-page layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nt_tail_dependence <- function(rho, nu) {\n  2 * pt(-sqrt((nu + 1) * (1 - rho) / (1 + rho)), nu + 1)\n}\n\ncrossing(\n  nu = c(2, 4, 8, 16, 32, 64, 128),\n  rho = seq(-1, 1, length.out = 400)\n) |>\n  mutate(\n    lambda = t_tail_dependence(rho, nu)\n  ) |>\n  ggplot(aes(rho, lambda, color = as.factor(nu))) +\n  geom_line(\n    linewidth = 1.5\n  ) +\n  scale_x_continuous(\n    expand = c(0, 0),\n    limits = c(-1, 1)\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    limits = c(0, 1)\n  ) +\n  scale_colour_brewer(\n    palette = \"Blues\",\n    direction = -1\n  ) +\n  labs(\n    x = expression(rho),\n    y = expression(lambda[U] == lambda[L]),\n    color = expression(nu),\n    title = \"Asymptotic tail dependence of the t-copula\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=100%}\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ncrossing(\n  nu = seq(1, 32, length.out = 100),\n  rho = 0\n) |>\n  mutate(\n    lambda = t_tail_dependence(rho, nu)\n  ) |>\n  ggplot(aes(nu, lambda)) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(\n    expand = c(0, 0),\n    limits = c(0, 32)\n  ) +\n  scale_y_continuous(\n    expand = c(0, 0),\n    limits = c(NA, 0.35),\n    trans = \"log10\",\n    labels = scales::label_log()\n  ) +\n  labs(\n    x = expression(nu),\n    y = expression(lambda[U] == lambda[L]),\n    subtitle = \"Even for zero correlation, the t-copula has non-zero tail dependence\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=100%}\n:::\n:::\n\n\n\n# Mathematical Definition\n\nNow that we have the intuition, let's look at the formal definition. Let $\\mathbf X = (X_1, \\dots, X_D)$ be a multivariate random variable with marginal distribution functions $F_i$ and dependence according to the t-copula. Their joint distribution function and density can be written:\n$$\n\\begin{aligned}\nH(\\mathbf{X}) &= t_{\\nu,\\Sigma}\\left(t_\\nu^{-1}(F_1(X_1)), \\dots, t_\\nu^{-1}(F_D(X_D))\\right) \\\\\nh(\\mathbf{X}) &= c\\left(F_1(X_1), \\dots, F_D(X_D)\\right)\\prod_{i=1}^D f_i(X_i)\n\\end{aligned}\n$$\n\nwhere:\n\n* $H(\\mathbf X)$ is the joint cumulative distribution function (CDF) of the collection of random variables $\\mathbf X$\n* $h(\\mathbf X)$ is the joint density corresponding to the CDF, $H(\\mathbf X)$\n* $t_{\\nu,\\Sigma}$ is the CDF of the multivariate t-distribution with $\\nu$ degrees of freedom and correlation matrix $\\Sigma$\n* $t_\\nu^{-1}$ is the inverse CDF of the univariate t-distribution with $\\nu$ degrees of freedom\n* $F_i$ and $f_i$ are the marginal CDFs and PDFs\n\nThe log-density of the t-copula can be written as:\n$$\n\\begin{aligned}\n\\log c(\\mathbf{u}|\\nu,\\Sigma) &= \\log t_{\\nu,\\Sigma}(\\mathbf{z}) - \\sum_{i=1}^D \\log t_\\nu(z_i) \\\\\nz_i &= t_\\nu^{-1}(u_i)\n\\end{aligned}\n$$\n\nwhere $t_{\\nu,\\Sigma}$ is the multivariate t density with correlation matrix $\\Sigma$ and $t_\\nu$ is the univariate t density.\n\n::: {.callout-note}\n\n## The Full Bivariate Density\n\nFor completeness, here's the explicit bivariate density:\n\n$$\nc(u_1,u_2) = \\frac{\\Gamma(\\frac{\\nu+2}{2})\\Gamma(\\frac{\\nu}{2})}{\\Gamma(\\frac{\\nu+1}{2})^2}\\frac{(1 + \\frac{z_1^2 + z_2^2 - 2\\rho z_1z_2}{\\nu(1-\\rho^2)})^{-\\frac{\\nu+2}{2}}}{\\sqrt{1-\\rho^2}(1 + \\frac{z_1^2}{\\nu})^{\\frac{\\nu+1}{2}}(1 + \\frac{z_2^2}{\\nu})^{\\frac{\\nu+1}{2}}}\n$$\n\nHowever, we'll use the hierarchical representation for implementation, which is both more intuitive and numerically stable.\n\n:::\n\n# Key Properties\n\n## Tail Dependence\n\nUnlike the Gaussian copula, the t-copula exhibits tail dependence. The upper and lower tail dependence coefficients are:\n\n$$\n\\lambda_U = \\lambda_L = 2t_{\\nu+1}\\left(-\\sqrt{\\frac{(\\nu + 1)(1-\\rho)}{1+\\rho}}\\right)\n$$\n\nThis symmetry ($\\lambda_U = \\lambda_L$) means the t-copula treats both tails equally.\n\n## Limiting Cases\n\n* As $\\nu \\to \\infty$: Converges to Gaussian copula\n* As $\\nu \\to 0$: Tail dependence increases[^1]\n* $\\nu = 1$: Cauchy copula (strongest tail dependence)\n\n[^1]: Lower values of $\\nu$ produce heavier tails and increase tail dependence. However, taking $\\nu$ extremely close to zero is more of a theoretical construct than a practical modeling choice. In most applications, $\\nu$ is chosen within a range that provides heavier tails than the Gaussian case, but not so extreme as to be unrealistic.\n\n## Concordance Measures\n\nLike the Gaussian copula:\n\n* Kendall's $\\tau$: $\\tau = \\frac{2}{\\pi}\\arcsin(\\rho)$\n* Spearman's $\\rho$: $\\rho_S = \\frac{6}{\\pi}\\arcsin(\\rho/2)$\n\nwhere $\\rho$ is the correlation coefficient.[^2]\n\n[^2]:  Note that these concordance measures are identical to the Gaussian copula because multiplying by the scaling factor $\\sqrt{\\nu/W}$ affects the magnitude of the variables but preserves their ranks. Since Kendall's $\\tau$ and Spearman's $\\rho$ only depend on the ranks of the data, not their actual values, they remain unchanged from the Gaussian case.\n\n# An Example\n\nLet's use the same example as in the previous post, except now with three variables, $Y_1$ and $Y_2$ and $Y_3$. We will model each asset's marginal distribution as exponential, and apply a multivariate t-copula to model their dependence. Alltogether this can be written\n$$ \n\\log h(\\mathbf{Y}) = \\log t_{\\nu, \\Sigma}(z_1, z_2, z_3 \\vert \\Sigma) - \\log t_\\nu(z_1, z_2, z_3) + \\sum_{i=1}^3 f_{\\mathrm{Exp}}(Y_i \\vert \\lambda_i)\n$$\n\n## Sampling the Data\n\n### In words\n\nTo sample from this data-generating process we\n\n1. Generate $\\mathbf{Z} \\sim \\mathcal{N}(\\mathbf{0}, \\mathbf{I}_D)$\n2. Generate $W \\sim \\text{Inv-}\\chi^2(\\nu)$ independently\n3. Apply correlation structure: $\\mathbf{Z}' = \\mathbf{L}\\mathbf{Z}$\n4. Scale variables: $\\mathbf{X} = \\sqrt{\\nu/W}\\cdot\\mathbf{Z}'$\n5. Transform to uniform: $\\mathbf{U} = t_\\nu(\\mathbf{X})$\n6. Transform to exponential: $\\mathbf{Y} = F^{-1}_{\\text{Exp}}(\\mathbf{U}|\\boldsymbol{\\lambda})$\n\n### In code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_obs <- 50\nrho12 <- 0.8\nrho13 <- 0.1\nrho23 <- 0.4\nlambda1 <- 2\nlambda2 <- 4\nlambda3 <- 6\ndf <- 4\nsigma <- matrix(\n  c(\n    1, rho12, rho13,\n    rho12, 1, rho23,\n    rho13, rho23, 1\n  ),\n  nrow = 3\n)\nL <- chol(sigma)\n\nset.seed(1)\nW <- rchisq(n_obs, df = df)\nZ <- matrix(rnorm(n = n_obs * 3), nrow = 3)\nZ <- sqrt(df / W) * t(L %*% Z)\n\nd <- tibble(\n  z1 = Z[, 1],\n  z2 = Z[, 2],\n  z3 = Z[, 3],\n  time = seq_len(n_obs)\n)  |> \n  pivot_longer(\n    c(-time), \n    names_to = \"variable\", \n    names_transform = parse_number,\n    values_to = \"z\"\n  ) |> \n  inner_join(\n    tibble(\n      variable = c(1, 2, 3),\n      lambda = c(lambda1, lambda2, lambda3)\n    )\n  ) |> \n  mutate(\n    u = pt(z, df = df),\n    y = qexp(u, rate = lambda)\n  )\n```\n:::\n\n::: {.cell .column-page}\n\n```{.r .cell-code  code-fold=\"true\"}\nd |>\n  select(-lambda) |>\n  pivot_longer(c(z, u, y)) |>\n  pivot_wider(names_from = variable, names_prefix = \"v\") |>\n  mutate(\n    name = fct_relevel(name, \"z\", \"u\") |>\n      fct_recode(\n        \"Student-t\" = \"z\",\n        \"Uniform\" = \"u\",\n        \"Exponential\" = \"y\"\n      )\n  ) |>\n  group_by(n2 = name) |>\n  group_map(\n    \\(data, ...) {\n      # X2 vs X1\n      p12 <- data |>\n        ggplot(aes(v1, v2)) +\n        geom_density_2d_filled(alpha = 0.5) +\n        geom_point(size = 1.4) +\n        scale_x_continuous(\n          expand = c(0, 0)\n        ) +\n        scale_y_continuous(\n          expand = c(0, 0)\n        ) +\n        theme(legend.position = \"none\") +\n        labs(\n          subtitle = unique(data$name),\n          x = expression(X[1]),\n          y = expression(X[2])\n        )\n\n      # X3 vs X1\n      p13 <- data |>\n        ggplot(aes(v1, v3)) +\n        geom_density_2d_filled(alpha = 0.5) +\n        geom_point(size = 1.4) +\n        scale_x_continuous(\n          expand = c(0, 0)\n        ) +\n        scale_y_continuous(\n          expand = c(0, 0)\n        ) +\n        theme(legend.position = \"none\") +\n        labs(\n          subtitle = unique(data$name),\n          x = expression(X[1]),\n          y = expression(X[3])\n        )\n\n      # X3 vs X2\n      p23 <- data |>\n        ggplot(aes(v2, v3)) +\n        geom_density_2d_filled(alpha = 0.5) +\n        geom_point(size = 1.4) +\n        scale_x_continuous(\n          expand = c(0, 0)\n        ) +\n        scale_y_continuous(\n          expand = c(0, 0)\n        ) +\n        theme(legend.position = \"none\") +\n        labs(\n          subtitle = unique(data$name),\n          x = expression(X[2]),\n          y = expression(X[3])\n        )\n\n      wrap_plots(p12, p13, p23, nrow = 3)\n    }\n  ) |>\n  wrap_plots(\n    ncol = 3,\n    widths = c(1, 1,1 )\n  ) +\n  plot_annotation(\n    title = \"Going from Student-t to Uniform to Exponential\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=100%}\n:::\n:::\n\n\n\n## Stan Model\n\nThe Stan implementation has three main components:\n\n### Student-t Copula Log-Density\n\nSimilar to the Gaussian copula, we need to implement the t-copula log density:\n\n\n\n::: {.cell output.var='t_copula'}\n\n```{.stan .cell-code}\nreal t_copula_lpdf(vector u, matrix L, real nu) {\n  int D = num_elements(u);\n  vector[D] x;\n  real logp;\n\n  // Transform U to X via the inverse t CDF\n  for (d in 1:D) {\n    x[d] = student_t_icdf(u[d], nu);\n  }\n\n  // Multivariate t density minus sum of univariate t densities\n  logp = multi_student_t_cholesky_lpdf(x | nu, rep_vector(0, D), L);\n  for (d in 1:D) {\n    logp -= student_t_lpdf(x[d] | nu, 0, 1);\n  }\n\n  return logp;\n}\n```\n:::\n\n\n\nThe key differences from the Gaussian copula are:\n\n1. We use the t-distribution's quantile function instead of the normal quantile function\n2. We use the multivariate t-distribution instead of the multivariate normal\n3. We have an additional parameter nu for the degrees of freedom\n\n### Student-t Quantile Function:\n\nUnlike the Gaussian copula where we could use Stan's built-in inv_Phi(), we need to implement the t-distribution's quantile function ourselves. The implementation in the Stan model follows numerical approximations for different ranges of the input values to ensure stability and accuracy.\n\nThe function is too long to paste here, but it is [based on Sean Pinkey's implementation from the Stan forums](https://discourse.mc-stan.org/t/student-t-quantile-function/31668)\n\n\n### Model Specification\n\nThe model follows a similar structure to the Gaussian copula but with the addition of the degrees of freedom parameter:\n\n\n\n::: {.cell output.var='model_spec'}\n\n```{.stan .cell-code}\nparameters {\n  vector<lower=0>[D] lambda;\n  cholesky_factor_corr[D] L;\n  real<lower=1> nu;   // degrees of freedom for the t-copula\n}\n\nmodel {\n  matrix[N, D] U;\n  for (i in 1:N) {\n    // Transform data to uniforms using exponential CDF\n    for (j in 1:D) {\n      target += exponential_lpdf(Y[i, j] | lambda[j]);\n      U[i, j] = exponential_cdf(Y[i, j] | lambda[j]);\n    }\n    // Add the t-copula contribution\n    target += t_copula_lpdf(to_vector(U[i, ]) | L, nu);\n  }\n\n  // Priors\n  target += lkj_corr_cholesky_lpdf(L | 1.0);\n  nu ~ gamma(2, 0.1);  // Prior for degrees of freedom\n  lambda ~ exponential(1);\n}\n```\n:::\n\n\n\n### Generated Quantities\n\nFor posterior predictive checks, we need to:\n\n1. Generate samples from the multivariate t-distribution\n2. Transform them to uniform variables using the t CDF\n3. Transform to exponential variables using the exponential quantile function\n\n\n\n::: {.cell output.var='gen_quant'}\n\n```{.stan .cell-code}\ngenerated quantities {\n  corr_matrix[D] Sigma = multiply_lower_tri_self_transpose(L);\n  matrix[N, D] yrep;\n\n  {\n    matrix[N, D] U_rep;\n    matrix[N, D] Z_rep;\n\n    for (i in 1:N) {\n      Z_rep[i] = (multi_student_t_cholesky_rng(nu, rep_vector(0, D), L))';\n      for (j in 1:D) {\n        U_rep[i, j] = student_t_cdf(Z_rep[i, j] | nu, 0, 1);\n        yrep[i, j] = exponential_icdf(U_rep[i, j], lambda[j]);\n      }\n    }\n  }\n}\n```\n:::\n\n\n\nThe main differences from the Gaussian copula's generated quantities block are:\n\n1. We use multi_student_t_cholesky_rng() instead of multi_normal_cholesky_rng()\n2. We use student_t_cdf() instead of Phi()\n3. The degrees of freedom parameter nu is passed to both functions\n4. This implementation allows us to model tail dependence that the Gaussian copula cannot capture, while maintaining the same marginal distributions.\n\n## Sampling from the posterior\n\nPrepare the data and sample from the model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nY <- d |>\n  select(time, variable, y) |> \n  pivot_wider(names_from = variable, values_from = y) |> \n  select(-time) |> \n  as.matrix()\n\nstan_data <- list(\n  Y = Y,\n  N = nrow(Y),\n  D = ncol(Y)\n)\n\nexample1 <- cmdstan_model(here::here(\"posts\", \"t-copula\", \"Stan\", \"t-copula.stan\"))\n\nresult <- example1$sample(\n  data = stan_data,\n  chains = 4,\n  seed = 1,\n  parallel_chains = 4,\n  show_messages = FALSE,\n  show_exceptions = FALSE\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult$summary(c(\"lambda\", \"Sigma[1,2]\", \"Sigma[1,3]\", \"Sigma[2,3]\", \"nu\")) |> \n  gt() |> \n  fmt_number()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"iyhxytnzte\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#iyhxytnzte table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#iyhxytnzte thead, #iyhxytnzte tbody, #iyhxytnzte tfoot, #iyhxytnzte tr, #iyhxytnzte td, #iyhxytnzte th {\n  border-style: none;\n}\n\n#iyhxytnzte p {\n  margin: 0;\n  padding: 0;\n}\n\n#iyhxytnzte .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#iyhxytnzte .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#iyhxytnzte .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#iyhxytnzte .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#iyhxytnzte .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#iyhxytnzte .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#iyhxytnzte .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#iyhxytnzte .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#iyhxytnzte .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#iyhxytnzte .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#iyhxytnzte .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#iyhxytnzte .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#iyhxytnzte .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#iyhxytnzte .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#iyhxytnzte .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iyhxytnzte .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#iyhxytnzte .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#iyhxytnzte .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#iyhxytnzte .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iyhxytnzte .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#iyhxytnzte .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iyhxytnzte .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#iyhxytnzte .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iyhxytnzte .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#iyhxytnzte .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iyhxytnzte .gt_left {\n  text-align: left;\n}\n\n#iyhxytnzte .gt_center {\n  text-align: center;\n}\n\n#iyhxytnzte .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#iyhxytnzte .gt_font_normal {\n  font-weight: normal;\n}\n\n#iyhxytnzte .gt_font_bold {\n  font-weight: bold;\n}\n\n#iyhxytnzte .gt_font_italic {\n  font-style: italic;\n}\n\n#iyhxytnzte .gt_super {\n  font-size: 65%;\n}\n\n#iyhxytnzte .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#iyhxytnzte .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#iyhxytnzte .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#iyhxytnzte .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#iyhxytnzte .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#iyhxytnzte .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#iyhxytnzte .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#iyhxytnzte .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#iyhxytnzte div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"variable\">variable</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mean\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"median\">median</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sd\">sd</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mad\">mad</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"q5\">q5</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"q95\">q95</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"rhat\">rhat</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ess_bulk\">ess_bulk</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ess_tail\">ess_tail</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">lambda[1]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">1.53</td>\n<td headers=\"median\" class=\"gt_row gt_right\">1.52</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.20</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.19</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">1.22</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">1.86</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">3,394.27</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,825.60</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">lambda[2]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">3.57</td>\n<td headers=\"median\" class=\"gt_row gt_right\">3.55</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.50</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.51</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">2.79</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">4.45</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">2,607.47</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,528.29</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">lambda[3]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">6.08</td>\n<td headers=\"median\" class=\"gt_row gt_right\">6.05</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.79</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.78</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">4.85</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">7.44</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">2,922.44</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,475.93</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">Sigma[1,2]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">0.43</td>\n<td headers=\"median\" class=\"gt_row gt_right\">0.44</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.12</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.12</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">0.21</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">0.61</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">2,873.68</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,756.21</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">Sigma[1,3]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">0.19</td>\n<td headers=\"median\" class=\"gt_row gt_right\">0.20</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.13</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.14</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">−0.04</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">0.41</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">2,875.84</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,802.58</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">Sigma[2,3]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">0.74</td>\n<td headers=\"median\" class=\"gt_row gt_right\">0.75</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.08</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.07</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">0.60</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">0.84</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">3,029.44</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,799.22</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">nu</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">3.55</td>\n<td headers=\"median\" class=\"gt_row gt_right\">3.29</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">1.23</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">1.07</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">2.00</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">5.88</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">3,499.92</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,999.41</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n::: {.cell .column-page}\n\n```{.r .cell-code}\nmcmc_trace(\n  result$draws(), \n  pars = c(\"lambda[1]\", \"lambda[2]\", \"Sigma[1,2]\", \"nu\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=100%}\n:::\n:::\n\n::: {.cell .column-page layout-ncol=\"3\"}\n\n```{.r .cell-code}\nyrep <- result$draws(\"yrep\", format = \"matrix\")\ny <- as.numeric(Y)\n\nppc_dens_overlay(\n  y = y[seq_len(n_obs)], \n  yrep = yrep[1:100, seq_len(n_obs)]\n) + \n  ggtitle(expression(X[1]))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=100%}\n:::\n\n```{.r .cell-code}\nppc_dens_overlay(\n  y = y[n_obs + seq_len(n_obs)], \n  yrep = yrep[1:100, n_obs + seq_len(n_obs)]\n) +\n  ggtitle(expression(X[2]))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-2.png){width=100%}\n:::\n\n```{.r .cell-code}\nppc_dens_overlay(\n  y = y[2 * n_obs + seq_len(n_obs)], \n  yrep = yrep[1:100, 2 * n_obs + seq_len(n_obs)]\n) +\n  ggtitle(expression(X[2]))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-3.png){width=100%}\n:::\n:::\n\n\n\n\n# Some Facts About the t-Copula\n\n1. **Dependence Range and Structure**:\n    - Like the Gaussian copula, interpolates between independence ($\\rho=0$) and perfect dependence ($\\rho=\\pm1$)\n    - Tail dependence controlled by degrees of freedom parameter $\\nu$\n    - Lower values of $\\nu$ produce stronger tail dependence\n    - As $\\nu \\to \\infty$, converges to the Gaussian copula\n    - As $\\nu \\to 0$, tail dependence increases\n\n2. **Concordance Measures**:\n    - Identical to the Gaussian copula due to rank preservation:\n        - **Kendall's $\\tau$**: $\\tau = \\frac{2}{\\pi}\\arcsin(\\rho)$\n        - **Spearman's $\\rho_S$**: $\\rho_S = \\frac{6}{\\pi}\\arcsin(\\rho/2)$\n    - This is because multiplying by the scaling factor $\\sqrt{\\nu/W}$ affects magnitude but preserves ranks\n\n3. **Symmetries and Dependencies**:\n    - **Radial Symmetry**: Like the Gaussian copula, exhibits radial symmetry\n    - **Exchangeability**: For bivariate case, invariant under permutation of arguments\n    - **Tail Dependence**: Unlike Gaussian copula, has tail dependence:\n        - Upper and lower tail dependence coefficients are equal:\n        $\\lambda_U = \\lambda_L = 2t_{\\nu+1}\\left(-\\sqrt{\\frac{(\\nu + 1)(1-\\rho)}{1+\\rho}}\\right)$\n        - Cannot model asymmetric tail dependence scenarios\n        - Tail dependence persists even with zero correlation\n\n4. **Computational Considerations**:\n    - More complex to implement than Gaussian copula\n    - Requires careful numerical handling of t quantile function\n    - Parameter estimation more challenging due to additional $\\nu$ parameter\n\n5. **Practical Applications**:\n    - Well-suited for financial data where extreme co-movements are common\n    - Better than Gaussian for modeling joint extreme events\n    - Popular in risk management due to tail dependence properties\n    - Useful when data shows symmetric heavy-tailed behavior\n\n6. **Limitations**:\n    - Cannot capture asymmetric tail dependence\n    - Symmetric tail dependence may not match all applications\n\n\n# Looking ahead\n\nWhile the t-copula addresses some limitations of the Gaussian copula through tail dependence, it still maintains symmetries that may not be appropriate for all applications. In our next post, we'll explore Archimedean copulas, which can model:\n\n* Asymmetric tail dependence\n* Different dependence structures\n* More flexible patterns of association\n\nStay tuned for \"Understanding the Clayton Copula\" where we'll begin our exploration of this important family of copulas.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}