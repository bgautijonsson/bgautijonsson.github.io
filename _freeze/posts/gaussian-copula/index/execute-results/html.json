{
  "hash": "7eb6b25320f19b3113e39f8d0e1ec4b5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A Gentle Introduction: The Gaussian Copula\"\nsubtitle: \"Copulas in Stan: Episode II\"\ndescription: \"This post continues the series on copulas in Stan by introducing the Gaussian copula, discussing its properties, applications, and providing examples of how to implement it in Stan.\"\ndate: \"2024-09-23\"\nformat:\n  html: \n    code-fold: show\n    toc: true\n    toc-location: left\nexecute:\n  echo: true\nimage: images/IMG_4426.jpeg\nengine: knitr\ncategories:\n    - stan\n    - copulas\n    - copulas in stan\n---\n\n\n\nThis post is a continuation of last week's blog post that introduces Copulas in Stan. This post will introduce the Gaussian copula, some of its positives and negatives, and how to code it up in Stan with an example.\n\n\n**Other posts in this series:**\n\n1. [Introduction to Copulas in Stan](../stan-copulas-1/index.qmd).\n\n\n\n::: {.callout-caution}\nI don't consider myself an expert in copulas. I just thought I might write up the things that I know so that it will hopefully help someone, or be corrected by someone who knows more. As Liam Neeson would say if he were a PhD student:\n\n![](images/IMG_4426.jpeg)\n:::\n\n\n\n## The Gaussian Copula\n\n### High-Level Summary\n\nModeling with the Gaussian copula can be summarised in a few steps:\n\n1. Let $\\mathbf X = (X_1, \\dots, X_D)$ be a multivariate random variable with marginal distribution functions $F_i$\n2. Each $F_i\\left(X_i \\vert \\theta_i\\right)$ converts the data, $X_i$, to uniformly distributed variables, $u_i$.\n3. Use the standard normal quantile function to convert each $u_i$ to $z_i$, $z_i = \\Phi^{-1}(u_i)$\n4. Model the dependencies using a correlation matrix *(or precision matrix if you make sure its inverse is a correlation matrix)*\n\n### A Tiny Bit of Math\n\nMore formally, the multivariate CDF of $\\mathbf X$ is written\n\n$$\nH(\\mathbf X) = \\Phi_\\Sigma\\left( \\Phi^{-1}(F_1(X_1 \\vert \\theta_1)), \\dots, \\Phi^{-1}(F_D(X_D \\vert \\theta_D))  \\vert \\Sigma \\right)\n$$\n\nwhere:\n\n* $H(\\mathbf X)$ is the joint cumulative distribution function (CDF) of the collection of random variables $\\mathbf X$.\n* $F_i(X_i \\vert \\theta_i)$ are the marginal CDFs of each variate.\n* $\\Phi^{-1}$ is the inverse of the standard normal CDF.\n* $\\Phi_\\Sigma$ is the CDF of the multivariate normal distribution with mean vector $\\mathbf 0$ and correlation matrix $\\Sigma$.\n\nWriting out the multivariate density, we get\n\n$$\n\\begin{aligned}\nh(\\mathbf X) &= c\\left(F_1(X_1 \\vert \\theta_1),  \\dots, F_D(X_D \\vert \\theta_D)\\right) \\prod_{i=1}^D f_i(X_i \\vert \\theta_i)\\\\\n&=\\frac{f_\\Sigma(z_1, \\dots, z_D \\vert \\Sigma)}{\\phi(z_1, \\dots, z_D)} \\prod_{i=1}^D f_i(X_i \\vert \\theta_i) \\\\\nz_i &= \\Phi^{-1}(u_i) \\\\\nu_i &= F_i(X_i \\vert \\theta_i) \n\\end{aligned}\n$$\n\nwhere:\n\n* $h(\\mathbf X)$ is the joint density corresponding to the CDF, $H(\\mathbf X)$.\n* $f_\\Sigma$ is the density of the multivariate Gaussian distribution with mean vector $\\mathbf 0$ and correlation matrix $\\Sigma$.\n* $\\phi$ is the density of the multivariate standard normal distribution.\n* $f_i(X_i \\vert \\theta_i)$ are the marginal densities of each variate.\n\n::: {.callout-note}\n### Deriving the Joint Density Using the Chain Rule and the Inverse Function Theorem\n\nWe start with the joint cumulative distribution function (CDF): \n\n$$\nH(\\mathbf{X}) = \\Phi_\\Sigma\\left( \\Phi^{-1}(F_1(X_1 \\vert \\theta_1)), \\dots, \\Phi^{-1}(F_D(X_D \\vert \\theta_D)) \\mid \\Sigma \\right)\n$$\n\nTo obtain the joint density $h(\\mathbf{X})$, we are basically applying the [chain rule](https://en.wikipedia.org/wiki/Chain_rule) to three functions:\n\n$$\n\\begin{aligned}\n\\frac{d}{dx} [f(g(h(x)))] &= f'(g(h(x))) \\cdot g'(h(x)) \\cdot h'(x)\n\\end{aligned}\n$$\n\nwhere $f$ is our multivariate Gaussian, $g$ is the standard normal quantile function and $h$ corresponds to each of the marginal CDFs. The first and last parts should be pretty clear, and we can get the derivative of the quantile function with the [inverse function theorem](https://en.wikipedia.org/wiki/Inverse_function_theorem)\n\n$$\n\\left(\\Phi^{-1}\\right)'(u) = \\frac{1}{\\Phi'(\\Phi^{-1}(u))} = \\frac{1}{\\phi(\\Phi^{-1}(u))},\n$$\n\nwhere $\\phi(z)$ is the standard normal pdf. Knowing this, we can write out the density as\n\n$$\n\\begin{aligned}\nh(\\mathbf{X}) &= f_{\\Sigma}(z_1, \\dots, z_D \\vert \\Sigma) \\prod_{i=1}^D \\frac{1}{\\phi(z_i)} \\prod_{i=1}^D f_i(X_i \\vert \\theta_i) \\\\\n&= \\frac{f_\\Sigma(z_1, \\dots, z_D \\vert \\Sigma)}{\\phi(z_1, \\dots, z_D)} \\prod_{i=1}^D f_i(X_i \\vert \\theta_i),\n\\end{aligned}\n$$\n\nwhere we used the shorthand $\\phi(z_1, \\dots, z_d) = \\prod_{i=1}^D \\frac{1}{\\phi(z_i)}$, to mean the density of a multivariate standard normal distribution.\n\n:::\n\nIn practice we *(like lumberjacks)* love logs, so we write:\n\n$$\n\\begin{aligned}\n\\log h(\\mathbf X) &= \\log f_\\Sigma\\left( z_1, \\dots, z_D \\vert \\Sigma \\right) - \\log \\phi(z_1, \\dots, z_D) + \\sum_{i=1}^D \\log f_i(X_i \\vert \\theta_i) \\\\\nz_i &= \\Phi^{-1}(u_i) \\\\\nu_i &= F_i(X_i \\vert \\theta_i) \n\\end{aligned}\n$$\n\nIf the correlation matrix, $\\Sigma$, is equal to a diagonal matrix, this will just reduce to the i.i.d. copula mentioned in the previous post.\n\n\n# A Simple Example\n\nLet's consider an example with two variables, $X_1$ and $X_2$. We will model each asset's marginal distribution as exponential, and apply a bivariate Gaussian copula to model their dependence. Alltogether this can be written\n$$ \n\\log h(\\mathbf{X}) = \\log f_\\Sigma(z_1, z_2 \\vert \\Sigma) - \\log \\phi(z_1, z_2) + \\sum_{i=1}^2 f_{\\mathrm{Exp}}(X_i \\vert \\lambda_i)\n$$\n\n## Sampling the Data\n\n### In words\n\nTo sample from this data-generating process we\n\n1. Generate $\\mathbf{Z} \\sim \\mathcal{N}(\\mathbf{0}, \\mathbf{I})$.\n2. Induce desired correlation structure using the Cholesky factor, $\\mathbf{L}$, of the correlation matrix: $\\mathbf{Z}' = \\mathbf{L} \\mathbf{Z}$.\n3. Apply the standard normal CDF, $\\Phi$, to obtain uniform random variables, $\\mathbf{U} = \\Phi(\\mathbf{Z}')$.\n4. Transform the uniform random variables to the desired marginal distributions using the inverse CDF of the exponential distribution: $\\mathbf{X} = F^{-1}_{\\text{exp}}(\\mathbf{U} \\vert \\lambda)$.\n\n### In code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(cmdstanr)\nlibrary(bayesplot)\nlibrary(patchwork)\nlibrary(gt)\ntheme_set(bggjphd::theme_bggj())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn_obs <- 50\nrho <- 0.6\nlambda1 <- 2\nlambda2 <- 4\nsigma <- matrix(\n  c(\n    1, rho,\n    rho, 1\n  ),\n  nrow = 2\n)\nL <- chol(sigma)\nset.seed(1)\nZ <- matrix(rnorm(n = n_obs * 2), nrow = 2)\nZ <- t(L %*% Z)\n\nd <- tibble(\n  z1 = Z[, 1],\n  z2 = Z[, 2],\n  time = seq_len(n_obs)\n)  |> \n  pivot_longer(\n    c(-time), \n    names_to = \"variable\", \n    names_transform = parse_number,\n    values_to = \"z\"\n  ) |> \n  inner_join(\n    tibble(\n      variable = c(1, 2),\n      lambda = c(lambda1, lambda2)\n    )\n  ) |> \n  mutate(\n    u = pnorm(z),\n    y = qexp(u, rate = lambda)\n  )\n```\n:::\n\n::: {.cell .column-page}\n\n```{.r .cell-code  code-fold=\"true\"}\nd |> \n  select(-lambda) |> \n  pivot_longer(c(z, u, y)) |> \n  pivot_wider(names_from = variable, names_prefix = \"v\") |> \n  mutate(\n    name = fct_relevel(name, \"z\", \"u\") |> \n      fct_recode(\n        \"Gaussian\" = \"z\",\n        \"Uniform\" = \"u\",\n        \"Exponential\" = \"y\"\n      )\n  ) |> \n  group_by(n2 = name) |> \n  group_map(\n    \\(data, ...) {\n      data  |> \n        ggplot(aes(v1, v2)) +\n        geom_density_2d_filled(alpha = 0.5) +\n        geom_point(size = 1.4) +\n        scale_x_continuous(\n          expand = c(0, 0)\n        ) +\n        scale_y_continuous(\n          expand = c(0, 0)\n        ) +\n        theme(legend.position = \"none\") +\n        labs(\n          subtitle = unique(data$name),\n          x = expression(X[1]),\n          y = expression(X[2])\n        ) \n    }\n  ) |> \n  wrap_plots(widths = c(1, 1, 1)) +\n  plot_annotation(\n    title = \"Going from Gaussian to Uniform to Exponential\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=100%}\n:::\n:::\n\n\n\n## Stan Model\n\nStan has built-in functions for the exponential lpdf and cdf, so the only thing we have to implement to fit our model is the Gaussian copula lpdf:\n\n$$\n\\begin{aligned}\nc(u_1, \\dots, u_D \\vert \\Sigma) &= \\log f_\\Sigma(z_1, \\dots, z_D \\vert \\Sigma) - \\log \\phi(z_1, \\dots, z_D) \\\\\nz_i &= \\Phi^{-1}(u_i)\n\\end{aligned}\n$$\n\nWe will code it up using the Cholesky factor of the correlation matrix\n\n\n\n::: {.cell output.var='gaussianlpdf'}\n\n```{.stan .cell-code}\nreal gaussian_copula_lpdf(vector u, matrix L) {\n  int D = num_elements(u);\n  vector[D] z = inv_Phi(u);\n  return multi_normal_cholesky_lpdf(z | rep_vector(0, D), L) - normal_lpdf(z | 0, 1);\n}\n\n```\n:::\n\n\n\nTo perform posterior predictive checks we'll also have to define the exponential quantile function\n\n$$\nQ(u) = -\\frac{\\ln(1 - u)}{\\lambda},\n$$\n\nand use it in the `generated quantities` block.\n\n\n\n::: {.cell output.var='genquan'}\n\n```{.stan .cell-code}\nfunctions {\n  real exponential_icdf(real u, real lambda) {\n    return -log(1 - u) / lambda;\n  }\n}\n\n...\n...\n\ngenerated quantities {\n  matrix[N, D] yrep;\n\n  {\n    matrix[N, D] Z_rep;\n    matrix[N, D] U_rep;\n\n    for (i in 1:N) {\n      Z_rep[i, ] = to_row_vector(multi_normal_cholesky_rng(rep_vector(0, D), L));\n      for (j in 1:D) {\n        U_rep[i, j] = Phi(Z_rep[i, j]);\n        yrep[i, j] = exponential_icdf(U_rep[i, j], lambda[j]);\n      }\n    }\n  }\n}\n```\n:::\n\n\n\nThus, we can write up our complete Stan model as below.\n\n\n\n::: {.cell output.var='example1'}\n\n```{.stan .cell-code}\nfunctions {\n  real gaussian_copula_lpdf(vector u, matrix L) {\n    int D = num_elements(u);\n    vector[D] z = inv_Phi(u);\n    return multi_normal_cholesky_lpdf(z | rep_vector(0, D), L) - normal_lpdf(z | 0, 1);\n  }\n\n  real exponential_icdf(real u, real lambda) {\n    return -log(1 - u) / lambda;\n  }\n\n}\ndata {\n  int<lower = 0> N;\n  int<lower = 0> D;\n  matrix[N, D] X;\n}\n\nparameters {\n  vector[D] lambda;\n  cholesky_factor_corr[D] L;\n}\n\nmodel {\n  matrix[N, D] U;\n  for (i in 1:N) {\n    for (j in 1:D) {\n      target += exponential_lpdf(X[i, j] | lambda[j]);\n      U[i, j] = exponential_cdf(X[i, j] | lambda[j]);\n    }\n    target += gaussian_copula_lpdf(to_vector(U[i, ]) | L);\n  }\n  \n  target += lkj_corr_cholesky_lpdf(L | 1.0);\n}\n\ngenerated quantities {\n  corr_matrix[D] Sigma = multiply_lower_tri_self_transpose(L);\n  matrix[N, D] yrep;\n\n  {\n    matrix[N, D] Z_rep;\n    matrix[N, D] U_rep;\n\n    for (i in 1:N) {\n      Z_rep[i, ] = to_row_vector(multi_normal_cholesky_rng(rep_vector(0, D), L));\n      for (j in 1:D) {\n        U_rep[i, j] = Phi(Z_rep[i, j]);\n        yrep[i, j] = exponential_icdf(U_rep[i, j], lambda[j]);\n      }\n    }\n  }\n}\n```\n:::\n\n\n\n## Sampling from the posterior\n\nPrepare the data and sample from the model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX <- d |>\n  select(time, variable, y) |> \n  pivot_wider(names_from = variable, values_from = y) |> \n  select(-time) |> \n  as.matrix()\n\nstan_data <- list(\n  X = X,\n  N = nrow(X),\n  D = ncol(X)\n)\n\nexample1 <- cmdstan_model(here::here(\"posts\", \"gaussian-copula\", \"stan\", \"example1.stan\"))\n\nresult <- example1$sample(\n  data = stan_data,\n  chains = 4,\n  parallel_chains = 4,\n  refresh = 1000,\n  show_messages = FALSE,\n  show_exceptions = FALSE\n)\n```\n:::\n\n\n\nBelow, we can see that we've come pretty close to the correct parameters.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresult$summary(c(\"lambda\", \"Sigma[1,2]\")) |> \n  gt() |> \n  fmt_number()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"cmiygynegt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#cmiygynegt table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#cmiygynegt thead, #cmiygynegt tbody, #cmiygynegt tfoot, #cmiygynegt tr, #cmiygynegt td, #cmiygynegt th {\n  border-style: none;\n}\n\n#cmiygynegt p {\n  margin: 0;\n  padding: 0;\n}\n\n#cmiygynegt .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#cmiygynegt .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#cmiygynegt .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#cmiygynegt .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#cmiygynegt .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#cmiygynegt .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#cmiygynegt .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#cmiygynegt .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#cmiygynegt .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#cmiygynegt .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#cmiygynegt .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#cmiygynegt .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#cmiygynegt .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#cmiygynegt .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#cmiygynegt .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cmiygynegt .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#cmiygynegt .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#cmiygynegt .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#cmiygynegt .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cmiygynegt .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#cmiygynegt .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cmiygynegt .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#cmiygynegt .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cmiygynegt .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cmiygynegt .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cmiygynegt .gt_left {\n  text-align: left;\n}\n\n#cmiygynegt .gt_center {\n  text-align: center;\n}\n\n#cmiygynegt .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#cmiygynegt .gt_font_normal {\n  font-weight: normal;\n}\n\n#cmiygynegt .gt_font_bold {\n  font-weight: bold;\n}\n\n#cmiygynegt .gt_font_italic {\n  font-style: italic;\n}\n\n#cmiygynegt .gt_super {\n  font-size: 65%;\n}\n\n#cmiygynegt .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#cmiygynegt .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#cmiygynegt .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#cmiygynegt .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#cmiygynegt .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#cmiygynegt .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#cmiygynegt .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#cmiygynegt .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#cmiygynegt div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"variable\">variable</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mean\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"median\">median</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sd\">sd</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mad\">mad</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"q5\">q5</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"q95\">q95</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"rhat\">rhat</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ess_bulk\">ess_bulk</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ess_tail\">ess_tail</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">lambda[1]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">1.71</td>\n<td headers=\"median\" class=\"gt_row gt_right\">1.70</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.23</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.22</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">1.36</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">2.10</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">2,367.64</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,733.44</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">lambda[2]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">4.65</td>\n<td headers=\"median\" class=\"gt_row gt_right\">4.61</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.64</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.63</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">3.68</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">5.75</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">2,316.02</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,465.39</td></tr>\n    <tr><td headers=\"variable\" class=\"gt_row gt_left\">Sigma[1,2]</td>\n<td headers=\"mean\" class=\"gt_row gt_right\">0.58</td>\n<td headers=\"median\" class=\"gt_row gt_right\">0.59</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">0.09</td>\n<td headers=\"mad\" class=\"gt_row gt_right\">0.09</td>\n<td headers=\"q5\" class=\"gt_row gt_right\">0.40</td>\n<td headers=\"q95\" class=\"gt_row gt_right\">0.71</td>\n<td headers=\"rhat\" class=\"gt_row gt_right\">1.00</td>\n<td headers=\"ess_bulk\" class=\"gt_row gt_right\">2,334.49</td>\n<td headers=\"ess_tail\" class=\"gt_row gt_right\">2,343.22</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n::: {.cell .column-page}\n\n```{.r .cell-code}\nmcmc_trace(result$draws(), pars = c(\"lambda[1]\", \"lambda[2]\", \"Sigma[1,2]\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=100%}\n:::\n:::\n\n\n\n\nWe can also run a basic posterior predictive check \n\n\n\n::: {.cell .column-page layout-ncol=\"2\"}\n\n```{.r .cell-code}\nyrep <- result$draws(\"yrep\", format = \"matrix\")\ny <- as.numeric(X)\n\nppc_dens_overlay(y = y[seq(1, 50)], yrep = yrep[1:100, seq(1, 50)]) + ggtitle(expression(X[1]))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=100%}\n:::\n\n```{.r .cell-code}\nppc_dens_overlay(y = y[seq(51, 100)], yrep = yrep[1:100, seq(51, 100)]) + ggtitle(expression(X[2]))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-2.png){width=100%}\n:::\n:::\n\n\n\n# Some Facts About the (Bivariate) Gaussian Copula\n\nTo end this post, I'll list some facts about the (bivariate) Gaussian copula to keep in mind before applying it to data.\n\n1. **Dependence Range**: The correlation parameter $\\rho$ ranges from $-1$ to $1$, allowing the Gaussian copula $C_\\rho$ to interpolate between both types of complete dependence and also allow for independence.\n\n2. **Concordance Measures**: The Gaussian copula has simple closed-form formulas for concordance measures:\n    - **Kendall’s $\\tau$**: $\\tau_\\rho = \\frac{2}{\\pi} \\arcsin(\\rho)$\n    - **Spearman’s $\\rho_S$**: $\\rho_S = \\frac{6}{\\pi} \\arcsin\\left(\\frac{\\rho}{2}\\right)$\n\n3. **Symmetries**: The Gaussian copula exhibits two strong symmetries:\n    - **Radial Symmetry**: The copula is equal to its own survival copula, $C_\\rho = \\hat{C}_\\rho$. This means that points are symmetrically scattered around the counterdiagonal $\\{(u_1, u_2) \\in [0, 1]^2 : u_2 = 1 - u_1\\}$. However, radial symmetry can be a limitation in financial modeling:\n      - **Dependence Between Asset Returns**: Joint negative returns are observed frequently due to macro-events affecting both stock prices, while joint positive returns are less frequent and mostly idiosyncratic. Radial symmetry fails to capture this asymmetry.\n      - **Dependence Between Time-to-Failure Events**: In risk management, it is crucial not to underestimate the effects of joint early failures *(of structural components, companies, etc)*. Radial symmetry implies that the dependence in the event of a joint long survival is the same as in the event of a joint early failure, which may not be realistic. Different lower-tail and upper-tail dependence is typically desired for modeling time-to-failure events.\n    - **Exchangeability**: The *bivariate* copula *(or multivariate of all correlations are the same)* is invariant under permutations of its arguments, $C_\\rho(u_1, u_2) = C_\\rho(u_2, u_1)$. This means that points are symmetrically scattered around the diagonal $\\{(u_1, u_2) \\in [0, 1]^2 : u_2 = u_1\\}$. However, exchangeability can be problematic when combined with inhomogeneous marginals:\n      - **Dependence Between Event Times**: When modeling the dependence between two time-to-event scenarios with different marginal distributions (e.g., exponential distributions with different parameters), exchangeability can lead to unintuitive results. For example, under perfect dependence ($\\rho = 1$), the event times do not coincide unless the marginal distributions are identical. Instead, the occurrence of one event triggers the occurrence of the other at a later time *(corresponding to the same quantile as the former event happened)*, depending on the marginal distributions. This can lead to incorrect modeling of joint events, which is critical in various applications.\n\n4. **Tail Independence**: The Gaussian copula does not exhibit tail dependence for $\\rho \\in (-1, 1)$. This means that it may not be suitable for modeling extreme co-movements in the tails of the distribution, as it underestimates the probability of joint extreme events. The notion of tail dependence is crucial in credit-risk modeling because it quantifies dependence in extremely distressed situations. Models with zero tail dependence, like the Gaussian copula, are inadequate for applications requiring the quantification of joint extreme scenarios such as insurance, finance or extreme weather.\n\n# Next up\n\nTo help deal with the lack of tail dependence in the Gaussian copula, the next post will introduce the t-copula as well as actually defining the notion of tail dependence.\n\n# More reading material\n\n* [Copulas: A personal view - Paul Embrechts](https://people.math.ethz.ch/~embrecht/ftp/copulas_personalview.pdf). Keep in mind that the copula at the top of page 13 is actually the Gumbel copula, not the Clayton copula.\n*  [Financial Engineering With Copulas Explained - Jan-Frederik Mai and Matthias Scherer](https://link.springer.com/book/10.1057/9781137346315)\n* [Everything You Always Wanted to Know about Copula Modeling but Were Afraid to Ask - Christian Genest and Anne-Catherine Favre](https://www.uni-muenster.de/Physik.TP/~lemm/seminarSS08/JHE-2007.pdf)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}